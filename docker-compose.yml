version: '3'
services:
  #PHP Service
  app:
    build:
      context: .
      dockerfile: Dockerfile
    # image: digitalocean.com/php
    container_name: app
    restart: unless-stopped
    tty: true
    environment:
      SERVICE_NAME: app
      SERVICE_TAGS: dev
    working_dir: /var/www
    volumes:
      - ./:/var/www
      # - ./php/local.ini:/usr/local/etc/php/conf.d/local.ini
    networks:
      - app-network
 
  #Nginx Service
  webserver:
    image: nginx:alpine
    container_name: webserver
    restart: unless-stopped
    tty: true
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./:/var/www
      - ./docker_config/nginx/conf.d/:/etc/nginx/conf.d/
      - ./docker_config/nginx/certs/:/etc/nginx/certs
    networks:
      - app-network
 
  #MySQL Service
  db:
    image: mysql:8.0
    container_name: db
    restart: unless-stopped
    tty: true
    ports:
      - "3307:3307"
    environment:
      MYSQL_DATABASE: laravel
      MYSQL_ROOT_PASSWORD: tester
      MYSQL_TCP_PORT: 3307
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql
    volumes:
      - dbdata:/var/lib/mysql
      #- ./docker_config/mysql/my.cnf:/etc/mysql/my.cnf
    networks:
      - app-network
 
  phpmyadmin:
    depends_on:
      - db
    image: phpmyadmin
    container_name: phpmyadmin
    restart: always
    ports:
      - 8080:80
    environment:
      PMA_HOST: db
      PMA_PORT: 3307
      PMA_PASSWORD: tester
    networks:
      - app-network
 
  mailhog:
    image: mailhog/mailhog
    container_name: mailhog
    logging:
      driver: 'none'  # disable saving logs
    ports:
      - 1025:1025 # smtp server
      - 8025:8025 # web ui
    networks:
      - app-network

#Docker Networks
networks:
  app-network:
    driver: bridge
 
#Volumes
volumes:
  dbdata:
    driver: local
